server.info{
  owner {
    name = "Павлычев Александр"
    description = ${server.info.owner.name} "есть основной владелец"
  }
  team {
    members = [
      "Павлычев Александр"
      "Кузнецова Оля"
      "Павлычев Николай"
    ]
  }
}
server.info.team.avgAge = 35

//Настройка Kafka
server.kafka {
  zookeeper {
    servers = "localhost:19092,localhost:29092,localhost:39092"
  }
  schema{
    url = "http://localhost:8081"
  }

}
//настройка Redis
server.redis{
  servers = "localhost"
  port = 6379
}

server.processes{
  default{
    autoCommit = true
    commitInterval = 10000//[ms]
    sessionTimeout = 30000//[ms]
    consumerTimeout = 120000//[ms]
    consumerPollTimeout = 1000//[ms]
  }
  genericAvro {
    topic = "es-kafka-test-generic-avro-topic-users"
    group = "es-kafka-test-generic-avro-consumer"
    autoCommit = ${server.processes.default.autoCommit}
    commitInterval = ${server.processes.default.commitInterval}
    sessionTimeout = ${server.processes.default.sessionTimeout}
    consumerTimeout = ${server.processes.default.consumerTimeout}
    consumerPollTimeout = ${server.processes.default.consumerPollTimeout}
  }
  schemaRegistry {
    topic = "es-kafka-test-schema-registry-topic-users" //sul-distributed-users //-my-test
    group = "es-kafka-test-schema-registry-consumer-test-2"
    autoCommit = ${server.processes.default.autoCommit}
    commitInterval = ${server.processes.default.commitInterval}
    sessionTimeout = ${server.processes.default.sessionTimeout}
    consumerTimeout = ${server.processes.default.consumerTimeout}
    consumerPollTimeout = ${server.processes.default.consumerPollTimeout}
  }
  streams{
    inTopic = "es-kafka-test-streams-topic-input-users"
    outTopic = "es-kafka-test-streams-topic-output-users"
    configTopic = "es-kafka-test-streams-topic-config"
  }

  redisQueue
    {
      themeQueue = "redis-test-queue"
    }
}
